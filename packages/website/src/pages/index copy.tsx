import Head from 'next/head';
import { Inter } from 'next/font/google';
import Link from 'next/link';
import DescPNG from '../../public/desc.png';
import UtilsPNG from '../../public/utils.png';
import { App, NavBar, Sidebar, Container, Text, Col, Row, Button, Switch, Popover } from '@sui/core';
import { useEffect, useState } from 'react';
import Image from 'next/image';
const inter = Inter({ subsets: ['latin'] });
const gradient =
  'linear-gradient(to right, #3f51b1 0%, #5a55ae 13%, #7b5fac 25%, #8f6aae 38%, #a86aa4 50%, #cc6b8e 62%, #f18271 75%, #f3a469 87%, #f7c978 100%)';
const features = [
  [
    '智能',
    '提示',
    '组件最多应用的场景',
    'ShitUI 团队里都是多年丰富经验的开发者，对组件使用率最高，疑问最多的信息内置在每个组件的注释上，无需查看文档便可敏捷开发',
    DescPNG,
    0,
    '#fa709a',
    '#f18271',
  ],
  [
    '令人惊艳',
    '的样式',
    '在你初次尝试过后',
    'ShitUI 的每一个组件都是参考了多个文档和市面上流行的大多数组件库，我们很了解，长什么样的组件构建出的应用程序，能让人惊讶不已。',
    DescPNG,
    1,
    '#7b5fac',
    '#cc6b8e',
  ],
  [
    '动态',
    '主题',
    '轻而易举',
    '每个组件都根据主题的变更做响应式变化，你可以轻松从根部定制你们项目自己的 UI 样式风格，这多亏了令人惊叹的高性能 CSS 样式方案 Emotion',
    DescPNG,
    0,
    '#3f51b1',
    '#a86aa4',
  ],
  [
    '明暗',
    '模式',
    '在毫秒之间',
    'Shit UI 的所有组件都内置了明暗模式响应，您只需几行代码就可以将其应用于您的应用程序',
    DescPNG,
    1,
    '#f3a469',
    '#3f51b1',
  ],
  [
    '更少的',
    '代码',
    '做更多的事',
    '同样的，对组件开发体验的精心打磨是我们始终如一坚持的初衷，合理的结构，深思熟虑的 APIs，一切为了开发者',
    DescPNG,
    0,
    '#cc6b8e',
    '#f18271',
  ],
  [
    '实用',
    '属性',
    '节省你的时间',
    'Shit UI 提供了一套开箱即用的缩写 CSS 属性、通过将多个 CSS 属性组合在一起或简化棘手的语法来加快工作流程。',
    UtilsPNG,
    1,
    '#5a55ae',
    '#f7c978',
  ],
];
const navigation = [
  { title: 'Guide', menus: [{ title: 'intro', link: 'docs/intro' }] },
  { title: 'Components', link: 'components', menus: [{ title: 'Button', link: 'docs/button' }] },
  { title: 'Blog', link: 'blog', menus: [] },
];
export default function Home() {
  const [darkMode, setDarkMode] = useState(true);
  const [theme, setTheme] = useState({
    darkMode,
    colors: {
      black: '#0e1012',
      grey: '#566171',
    },
  });
  useEffect(() => {
    setTheme(v => ({ ...v, darkMode }));
  }, [darkMode]);

  useEffect(() => {});
  return (
    <>
      <Head>
        <title>Next 3D</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <App theme={theme}>
        <Container relative fullScreen>
          <NavBar
            hideOnScroll
            css={theme => ({
              position: 'sticky',
              top: 0,
              padding: '1em',
              backdropFilter: 'saturate(180%) blur(10px)',
              background: 'transparent',
              boxShadow: theme.shadows.xs,
            })}>
            <NavBar.Brand>
              <Text h1 size={'2em'}>
                Next 3D
              </Text>
            </NavBar.Brand>
            <NavBar.Content>
              <Row>
                {navigation.map(v => (
                  <Popover>
                    <Popover.Trigger>
                      <Col pa='1em'>
                        <Button text>
                          <Text>{v.title}</Text>
                        </Button>
                      </Col>
                    </Popover.Trigger>

                    <Popover.Content>
                      <Container
                        pa='1em'
                        css={theme => ({
                          boxShadow: theme.shadows.xm,
                        })}>
                        {v.menus.map(m => {
                          return (
                            <Button>
                              <Link href={m.link}>{m.title}</Link>
                            </Button>
                          );
                        })}
                      </Container>
                    </Popover.Content>
                  </Popover>
                ))}
              </Row>
            </NavBar.Content>
            <NavBar.Extra>
              <Switch textOn='暗' textOff='明' on={darkMode} onChange={() => setDarkMode(v => !v)} />
            </NavBar.Extra>
          </NavBar>

          <Sidebar absolute></Sidebar>
          <Container main pa='5em' mb='5em'>
            <Container section>
              <Row vertical>
                <Col>
                  <Text size={theme => theme.spacing?.[18]} h1 gradient={gradient}>
                    下一代的
                  </Text>
                </Col>
                <Col>
                  <Text
                    gradient={
                      'linear-gradient(to right,  #5a55ae 0%, #7b5fac 25%, #8f6aae 38%, #a86aa4 50%, #cc6b8e 62%, #f18271 75%, #f3a469 100%)'
                    }
                    size={theme => theme.spacing?.[18]}
                    h3>
                    3D 渲染工具库
                  </Text>
                </Col>
                <Col css={{ maxWidth: '800px' }}>
                  <Text pa='1em' px='3em' color='#566171' size={theme => theme.spacing?.[10]} p>
                    基于世界上最先进的引擎 WebGPU 和现代化实用的 API 方案设计 使用Next
                    3D，任何人都能轻而易举的创造出独一无二高性能高质量的3D应用！
                  </Text>
                </Col>
                <Col pa='1em'>
                  <Button
                    // color={theme => theme.colors.black}
                    color={'#0e1012'}
                    rounded
                    gradient='linear-gradient(to right, #fa709a 0%, #fee140 100%)'>
                    Get Started
                  </Button>
                </Col>
              </Row>
            </Container>
            {features.map((v: any[]) => {
              const gt = `linear-gradient(to right, ${v[6]} 0%, ${v[7]} 100%)`;
              const desc = (
                <Col
                  alignSelf='start'
                  leftText={!v[5]}
                  rightText={!!v[5]}
                  css={{
                    maxWidth: '25em',
                  }}>
                  <Text h2 size='5rem'>
                    <Text span gradient={gt}>
                      {v[0]}
                    </Text>
                    {v[1]}
                  </Text>
                  <Text size='2rem' py='.5rem'>
                    {v[2]}
                  </Text>
                  <Text color='#566171'>{v[3]}</Text>
                </Col>
              );
              return (
                <Container section px='8em' my='15em'>
                  <Row justify='center'>
                    {!v[5] && desc}

                    <Col
                      css={{
                        margin: `0px ${!!v[5] ? '2em' : '0px'} 0px ${!v[5] ? '2em' : '0px'}`,
                      }}>
                      <Image width={500} height={300} src={v[4]} alt={''} />
                    </Col>
                    {!!v[5] && desc}
                  </Row>
                </Container>
              );
            })}

            <Container section>
              <Row vertical>
                <Col></Col>
              </Row>
            </Container>
          </Container>
          <Container footer w='100%' h='15em' background={theme => theme.colors.black}>
            footer
          </Container>
        </Container>
      </App>
    </>
  );
}
